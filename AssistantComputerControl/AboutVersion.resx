<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        h70+AAAAAElFTkSuQmCC
</value>
  </data>
</root>